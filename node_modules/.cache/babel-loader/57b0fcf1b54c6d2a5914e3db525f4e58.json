{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jdbrewer-hofmann/Development/code/Mod5/tombardier-frontend-demo/src/components/ProjectCard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { updateProject, createProjectLink, newProjectImage, brandnewProjectImage, deleteProject, deleteProjectImage } from '../redux/actions';\nimport NewProjectImage from './NewProjectImage';\nimport ProjectImages from './ProjectImages';\nimport LocalEditBtn from '../components/LocalEditBtn'; // import LocalDeleteBtn from '../components/LocalDeleteBtn'\n\nimport Link from './Link';\nimport NewLink from './NewLink';\nimport '../css/ProjectCard.css';\n\nclass ProjectCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: this.props.project.title,\n      subtitle: this.props.project.subtitle,\n      description: this.props.project.description,\n      id: this.props.project.project_id,\n      editMode: false,\n      showNewLink: false,\n      showNewImage: false\n    };\n\n    this.toggleEditMode = () => {\n      this.setState(prevState => ({\n        editMode: !prevState.editMode\n      }));\n    };\n\n    this.showNewLinkForm = () => {\n      this.setState({\n        showNewLink: true\n      });\n    };\n\n    this.hideNewLinkForm = () => {\n      this.setState({\n        showNewLink: false\n      });\n    };\n\n    this.showNewImageForm = () => {\n      this.setState({\n        showNewImage: true\n      });\n    };\n\n    this.hideNewImageForm = () => {\n      this.setState({\n        showNewImage: false\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let patchObj = { ...this.state\n      };\n      delete patchObj.editMode;\n      delete patchObj.showNewLink;\n      delete patchObj.showNewImage;\n      this.props.updateProject(patchObj);\n      this.setState({\n        editMode: false\n      });\n    };\n\n    this.handleDelete = () => {\n      this.props.deleteProject(this.state.id);\n      this.props.history.push('/');\n    };\n\n    this.renderLinks = () => {\n      return this.props.project.links.map(pl => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"content-row\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          link: pl,\n          project: true\n        }, pl.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, pl.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this));\n    };\n\n    this.renderProjectImages = () => {\n      return this.props.project.images.map(img => /*#__PURE__*/_jsxDEV(ProjectImages, {\n        image: img,\n        editMode: this.props.editMode,\n        newProjectImage: this.props.newProjectImage,\n        projectId: this.props.project.project_id,\n        deleteProjectImage: this.props.deleteProjectImage\n      }, img.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 53\n      }, this));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          className: \"content-sub-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"pj-title grid-1-4\",\n            name: \"title\",\n            value: this.state.title,\n            placeholder: \"Your project title\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"pj-subtitle grid-1-4\",\n            name: \"subtitle\",\n            value: this.state.subtitle,\n            placeholder: \"project sub-title\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"pj-descript grid-1-4\",\n            name: \"description\",\n            value: this.state.description,\n            placeholder: \"tell us about your project\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"Submit\",\n            className: \"update star grid-1-3\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(LocalEditBtn, {\n            editMode: this.state.editMode,\n            toggleEditMode: this.toggleEditMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-sub-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"pj-title grid-1-4\",\n            children: this.props.project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"pj-subtitle grid-1-4\",\n            children: this.props.project.subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pj-descript grid-1-4\",\n            children: this.props.project.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(LocalEditBtn, {\n            editMode: this.state.editMode,\n            toggleEditMode: this.toggleEditMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"section-header\",\n            children: \"Links\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), this.renderLinks()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), this.props.currentUser ? this.state.showNewLink ? /*#__PURE__*/_jsxDEV(NewLink, {\n          projectId: this.props.project.project_id,\n          createProjectLink: this.props.createProjectLink,\n          project: true,\n          hideNewLinkForm: this.hideNewLinkForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"update grid-1-3 mg-btn-5\",\n          onClick: this.showNewLinkForm,\n          children: \"Add New Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }, this) : null]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"section-header \",\n        children: \"Project Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this), this.renderProjectImages(), this.state.showNewImage ? /*#__PURE__*/_jsxDEV(NewProjectImage, {\n        brandnewProjectImage: this.props.brandnewProjectImage,\n        projectId: this.props.project.project_id,\n        hideNewImageForm: this.hideNewImageForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this) : this.props.currentUser ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"update\",\n        onClick: this.showNewImageForm,\n        children: \"Add New Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this) : null, this.props.currentUser ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleDelete,\n        className: \"delete-project update grid-1-4\",\n        children: \"Delete Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mdp = dispatch => {\n  return {\n    updateProject: updateObj => dispatch(updateProject(updateObj)),\n    newProjectImage: (newImage, projectImageId) => dispatch(newProjectImage(newImage, projectImageId)),\n    brandnewProjectImage: newImage => dispatch(brandnewProjectImage(newImage)),\n    deleteProject: id => dispatch(deleteProject(id)),\n    createProjectLink: (newLink, projectId) => dispatch(createProjectLink(newLink, projectId)),\n    deleteProjectImage: id => dispatch(deleteProjectImage(id))\n  };\n};\n\nconst msp = state => {\n  return {\n    editMode: state.editMode,\n    currentUser: state.currentUser\n  };\n};\n\nexport default connect(msp, mdp)(ProjectCard);","map":{"version":3,"sources":["/Users/jdbrewer-hofmann/Development/code/Mod5/tombardier-frontend-demo/src/components/ProjectCard.js"],"names":["React","connect","updateProject","createProjectLink","newProjectImage","brandnewProjectImage","deleteProject","deleteProjectImage","NewProjectImage","ProjectImages","LocalEditBtn","Link","NewLink","ProjectCard","Component","state","title","props","project","subtitle","description","id","project_id","editMode","showNewLink","showNewImage","toggleEditMode","setState","prevState","showNewLinkForm","hideNewLinkForm","showNewImageForm","hideNewImageForm","handleChange","e","target","name","value","handleSubmit","preventDefault","patchObj","handleDelete","history","push","renderLinks","links","map","pl","renderProjectImages","images","img","render","currentUser","mdp","dispatch","updateObj","newImage","projectImageId","newLink","projectId","msp"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateProject, createProjectLink, newProjectImage, brandnewProjectImage, deleteProject, deleteProjectImage } from '../redux/actions'\nimport NewProjectImage from './NewProjectImage'\nimport ProjectImages from './ProjectImages'\nimport LocalEditBtn from '../components/LocalEditBtn'\n// import LocalDeleteBtn from '../components/LocalDeleteBtn'\nimport Link from './Link'\nimport NewLink from './NewLink'\nimport '../css/ProjectCard.css'\n\n\n\nclass ProjectCard extends React.Component {\n\n    state = {\n        title: this.props.project.title,\n        subtitle: this.props.project.subtitle,\n        description: this.props.project.description,\n        id: this.props.project.project_id,\n        editMode: false,\n        showNewLink: false,\n        showNewImage: false\n    }\n\n    toggleEditMode = () => {\n        this.setState( prevState => ({\n            editMode: !prevState.editMode\n        }) )\n    }\n\n    showNewLinkForm = () => {\n        this.setState({ showNewLink: true })\n    }\n\n    hideNewLinkForm = () => {\n        this.setState({ showNewLink: false })\n    }\n\n    showNewImageForm = () => {\n        this.setState({ showNewImage: true })\n    }\n\n    hideNewImageForm = () => {\n        this.setState({ showNewImage: false })\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        let patchObj = {...this.state}    \n        delete patchObj.editMode\n        delete patchObj.showNewLink\n        delete patchObj.showNewImage   \n        this.props.updateProject(patchObj)\n        this.setState({\n            editMode: false\n        })\n    }\n\n    handleDelete = () => {\n        this.props.deleteProject(this.state.id)\n        this.props.history.push('/')\n    }\n\n    renderLinks = () => {\n        return this.props.project.links.map(pl =>\n            <li\n                className=\"content-row\"\n                key={pl.id}\n            >\n                <Link \n                key={pl.id}\n                link={pl}\n                project\n                />\n            </li>\n            \n         )\n    }\n\n    renderProjectImages = () => {\n        return this.props.project.images.map(img => <ProjectImages\n            key={img.id} \n            image={img}\n            editMode={this.props.editMode}\n            newProjectImage={this.props.newProjectImage}\n            projectId={this.props.project.project_id}\n            deleteProjectImage={this.props.deleteProjectImage}\n        /> )\n    }\n\n    render(){\n        return(\n            <div>\n            { this.state.editMode ? \n            <>\n            <form \n                onSubmit={this.handleSubmit} \n                className=\"content-sub-div\"\n            >\n                <input\n                    className=\"pj-title grid-1-4\"\n                    name=\"title\"\n                    value={this.state.title}\n                    placeholder=\"Your project title\"\n                    onChange={this.handleChange}\n                />\n                <input\n                    className=\"pj-subtitle grid-1-4\"\n                    name=\"subtitle\"\n                    value={this.state.subtitle}\n                    placeholder=\"project sub-title\"\n                    onChange={this.handleChange}\n                />\n                <textarea\n                    className=\"pj-descript grid-1-4\"\n                    name=\"description\"\n                    value={this.state.description}\n                    placeholder=\"tell us about your project\"\n                    onChange={this.handleChange}\n                />\n                <button \n                    type=\"Submit\" \n                    className=\"update star grid-1-3\"\n                >Update</button>\n                <LocalEditBtn \n                    editMode={this.state.editMode}\n                    toggleEditMode={this.toggleEditMode}\n                />\n            </form>\n            </>\n            :\n            <>\n            <div className=\"content-sub-div\">\n                <h2 className=\"pj-title grid-1-4\">{this.props.project.title}</h2>\n                <h3 className=\"pj-subtitle grid-1-4\">{this.props.project.subtitle}</h3>\n                <p className=\"pj-descript grid-1-4\">{this.props.project.description}</p>\n                <LocalEditBtn \n                    editMode={this.state.editMode}\n                    toggleEditMode={this.toggleEditMode}\n                />\n            </div>\n\n            <ul>\n                <h4 className=\"section-header\">Links</h4>\n                {this.renderLinks()}\n            </ul>\n\n            {this.props.currentUser ?\n                 this.state.showNewLink ? \n                <NewLink \n                    projectId={this.props.project.project_id}\n                    createProjectLink={this.props.createProjectLink}\n                    project\n                    hideNewLinkForm={this.hideNewLinkForm}\n                />\n                :\n                <button\n                    className=\"update grid-1-3 mg-btn-5\"\n                    onClick={this.showNewLinkForm}\n                >Add New Link</button>\n            : null }\n            </>\n            }\n            <h4 className=\"section-header \">Project Images</h4>\n            { this.renderProjectImages() }\n\n            { this.state.showNewImage ?\n            <NewProjectImage \n                brandnewProjectImage={this.props.brandnewProjectImage}\n                projectId={this.props.project.project_id}\n                hideNewImageForm={this.hideNewImageForm}\n            />\n            :\n            this.props.currentUser ?\n            <button\n                className=\"update\"\n                onClick={this.showNewImageForm}\n            >Add New Image</button>\n            : null\n             }\n            { this.props.currentUser ?\n                <button\n                    onClick={this.handleDelete}\n                    className=\"delete-project update grid-1-4\"\n                >Delete Project</button>\n                : null\n            } \n            </div>\n        )\n    }\n}\n\nconst mdp = dispatch => {\n    return {\n        updateProject: (updateObj) => dispatch(updateProject(updateObj)),\n        newProjectImage: (newImage, projectImageId) => dispatch(newProjectImage(newImage, projectImageId)),\n        brandnewProjectImage:(newImage) => dispatch(brandnewProjectImage(newImage)),\n        deleteProject: (id) => dispatch(deleteProject(id)),\n        createProjectLink: (newLink, projectId) => dispatch(createProjectLink(newLink, projectId)),\n        deleteProjectImage:(id) => dispatch(deleteProjectImage(id))\n    }\n}\n\nconst msp = state => {\n    return {\n        editMode: state.editMode,\n        currentUser: state.currentUser\n    }\n}\n\nexport default connect(msp, mdp)(ProjectCard) "]},"metadata":{},"sourceType":"module"}