{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jdbrewer-hofmann/Development/code/Mod5/tombardier-frontend-demo/src/components/UserImage.js\";\nimport React from 'react';\nimport LocalEditBtn from './LocalEditBtn';\nimport { connect } from 'react-redux';\nimport { newUserImage } from '../redux/actions';\n\nclass UserImage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      image: null,\n      tempImage: `http://localhost:3000/${this.props.image}`,\n      editMode: false\n    };\n\n    this.toggleEditMode = () => {\n      this.setState(prevState => ({\n        editMode: !prevState.editMode\n      }));\n    };\n\n    this.handleFileChange = e => {\n      const uploadingFile = e.target.files[0];\n      const fileReader = new FileReader();\n\n      fileReader.onloadend = () => {\n        this.setState({\n          image: uploadingFile,\n          tempImage: fileReader.result\n        });\n      };\n\n      if (uploadingFile) {\n        fileReader.readAsDataURL(uploadingFile);\n      }\n    };\n\n    this.handleImageSubmit = e => {\n      e.preventDefault();\n      const formData = new FormData();\n\n      if (this.state.image) {\n        formData.append('user[image]', this.state.image);\n      }\n\n      this.props.newUserImage(formData);\n      this.setState({\n        editMode: false\n      });\n    };\n  }\n\n  render() {\n    const preview = this.state.tempImage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"\",\n        src: this.state.tempImage,\n        className: \"user-image grid-1-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"image-prev-statement grid-1-4\",\n        children: \"How does that look?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: this.state.editMode ? /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"content-sub-div\",\n        onSubmit: this.handleImageSubmit,\n        children: [preview, /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"image-upload-input grid-1-4\",\n          name: \"image\",\n          type: \"file\",\n          onChange: this.handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"update grid-1-3\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(LocalEditBtn, {\n          editMode: this.state.editMode,\n          toggleEditMode: this.toggleEditMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-sub-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"user-image grid-1-4\",\n          alt: \"\",\n          src: `http://localhost:3000/${this.props.image}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LocalEditBtn, {\n          editMode: this.state.editMode,\n          toggleEditMode: this.toggleEditMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst msp = state => {\n  return {\n    image: state.user.image\n  };\n};\n\nconst mdp = dispatch => {\n  return {\n    newUserImage: obj => dispatch(newUserImage(obj))\n  };\n};\n\nexport default connect(msp, mdp)(UserImage);","map":{"version":3,"sources":["/Users/jdbrewer-hofmann/Development/code/Mod5/tombardier-frontend-demo/src/components/UserImage.js"],"names":["React","LocalEditBtn","connect","newUserImage","UserImage","Component","state","image","tempImage","props","editMode","toggleEditMode","setState","prevState","handleFileChange","e","uploadingFile","target","files","fileReader","FileReader","onloadend","result","readAsDataURL","handleImageSubmit","preventDefault","formData","FormData","append","render","preview","msp","user","mdp","dispatch","obj"],"mappings":"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","sourcesContent":["import React from 'react'\nimport LocalEditBtn from './LocalEditBtn'\nimport { connect } from 'react-redux';\nimport { newUserImage } from '../redux/actions'\n\n\nclass UserImage extends React.Component{\n\n    state = {\n        image: null,\n        tempImage: `http://localhost:3000/${this.props.image}`,\n        editMode: false\n    }\n\n    toggleEditMode = () => {\n        this.setState( prevState => ({\n            editMode: !prevState.editMode\n        }) )\n    }\n\n    handleFileChange = (e) => {\n        const uploadingFile = e.target.files[0]\n        const fileReader = new FileReader();\n        fileReader.onloadend = () => {\n            this.setState({\n            image: uploadingFile,\n            tempImage: fileReader.result\n        })\n        }\n        if (uploadingFile){\n            fileReader.readAsDataURL(uploadingFile)\n        } \n    }\n\n    handleImageSubmit = (e) => {\n        e.preventDefault()\n        const formData = new FormData();\n        if(this.state.image){\n          formData.append('user[image]', this.state.image)\n        }\n        this.props.newUserImage(formData)\n        this.setState({\n            editMode: false\n        })\n    }\n\n    render(){\n        const preview = this.state.tempImage ? \n        <>\n        <img\n             alt=\"\" \n             src={this.state.tempImage}\n             className=\"user-image grid-1-4\"\n             ></img>\n        <p className=\"image-prev-statement grid-1-4\">How does that look?</p>\n        </> : null\n\n        return(\n            <div className=\"image-container\">\n            { this.state.editMode ? \n            <form \n                className=\"content-sub-div\"\n                onSubmit={this.handleImageSubmit}\n                >\n                { preview }\n                <input\n                    className=\"image-upload-input grid-1-4\"\n                    name=\"image\"\n                    type=\"file\"\n                    onChange={this.handleFileChange}\n                ></input>\n                <button className=\"update grid-1-3\">Update</button>\n                <LocalEditBtn \n                editMode={this.state.editMode}\n                toggleEditMode={this.toggleEditMode}\n                />\n            </form>\n            : \n            <div \n                className=\"content-sub-div\"\n            >\n            <img\n                className=\"user-image grid-1-4\"\n                alt=\"\" \n                src={`http://localhost:3000/${this.props.image}`}></img>\n            <LocalEditBtn \n                editMode={this.state.editMode}\n                toggleEditMode={this.toggleEditMode}\n            />\n            </div>\n            }\n            </div>\n        )\n    }\n}\n\nconst msp = state => {\n    return {\n        image: state.user.image\n    }\n}\n\nconst mdp = dispatch => {\n    return {\n        newUserImage: (obj) => dispatch(newUserImage(obj))\n    }\n}\n\nexport default connect(msp, mdp)(UserImage) "]},"metadata":{},"sourceType":"module"}