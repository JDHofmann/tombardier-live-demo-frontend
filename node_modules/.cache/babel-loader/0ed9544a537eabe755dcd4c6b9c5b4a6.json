{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jdbrewer-hofmann/Development/code/tombardier-live-demo/tombardier-live-demo-frontend/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './containers/Header';\nimport Footer from './components/Footer';\nimport ProjectsIndex from './containers/ProjectsIndex';\nimport Contact from './containers/Contact';\nimport About from './containers/About';\nimport { fetchUser, editAccountInfo, editSiteInfo, createProject, submitLogin, fetchCurrentUser, handleLogout } from './redux/actions';\nimport Login from './components/Login';\nimport Admin from './components/Admin';\nimport { InfoModal } from './components/InfoModal';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      infoModal: true\n    };\n\n    this.renderInfoModal = () => {\n      return this.state.infoModal ?\n      /*#__PURE__*/\n      // console.log(\"modal here\") \n      _jsxDEV(InfoModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this) : null;\n    };\n\n    this.renderTitle = () => {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"site-title solo\",\n        children: this.props.user.site_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      this.props.fetchCurrentUser(token);\n    } else {\n      console.log(\"no token\");\n    }\n\n    this.renderInfoModal();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            render: () => /*#__PURE__*/_jsxDEV(Login, {\n              submitLogin: this.props.submitLogin,\n              currentUser: this.props.currentUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this), this.props.currentUser ? /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/admin\",\n            render: () => /*#__PURE__*/_jsxDEV(Admin, {\n              currentUser: this.props.currentUser,\n              editAccountInfo: this.props.editAccountInfo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this) : null, /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/contact\",\n            render: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: this.props.user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [this.renderTitle(), /*#__PURE__*/_jsxDEV(Contact, {\n                  user: this.props.user,\n                  currentUser: this.props.currentUser,\n                  editSiteInfo: this.props.editSiteInfo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true) : null\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            render: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: this.props.user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [this.renderTitle(), /*#__PURE__*/_jsxDEV(About, {\n                  user: this.props.user,\n                  editSiteInfo: this.props.editSiteInfo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true) : null\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            render: routerProps => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: this.props.user ? /*#__PURE__*/_jsxDEV(ProjectsIndex, {\n                renderTitle: this.renderTitle,\n                history: routerProps.history,\n                projects: this.props.user.user_projects,\n                user: this.props.user,\n                currentUser: this.props.currentUser,\n                createProject: this.props.createProject,\n                editSiteInfo: this.props.editSiteInfo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this) : null\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        user: this.props.user,\n        submitLogin: this.props.submitLogin,\n        startEditMode: this.props.startEditMode,\n        startViewMode: this.props.startViewMode,\n        currentUser: this.props.currentUser,\n        handleLogout: this.props.handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mdp = dispatch => {\n  return {\n    fetchUser: () => dispatch(fetchUser()),\n    editAccountInfo: patchObj => dispatch(editAccountInfo(patchObj)),\n    editSiteInfo: patchObj => dispatch(editSiteInfo(patchObj)),\n    createProject: userId => dispatch(createProject(userId)),\n    submitLogin: loginObj => dispatch(submitLogin(loginObj)),\n    fetchCurrentUser: token => dispatch(fetchCurrentUser(token)),\n    handleLogout: () => dispatch(handleLogout())\n  };\n};\n\nconst msp = state => {\n  return {\n    user: state.user,\n    currentUser: state.currentUser\n  };\n};\n\nexport default connect(msp, mdp)(App);","map":{"version":3,"sources":["/Users/jdbrewer-hofmann/Development/code/tombardier-live-demo/tombardier-live-demo-frontend/src/App.js"],"names":["React","connect","Route","Switch","Header","Footer","ProjectsIndex","Contact","About","fetchUser","editAccountInfo","editSiteInfo","createProject","submitLogin","fetchCurrentUser","handleLogout","Login","Admin","InfoModal","App","Component","state","infoModal","renderInfoModal","renderTitle","props","user","site_title","componentDidMount","token","localStorage","getItem","console","log","render","currentUser","routerProps","history","user_projects","startEditMode","startViewMode","mdp","dispatch","patchObj","userId","loginObj","msp"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAUC,KAAV,EAAiBC,MAAjB,QAA+B,kBAA/B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,EAAoBC,eAApB,EAAqCC,YAArC,EAAmDC,aAAnD,EAAkEC,WAAlE,EAA+EC,gBAA/E,EAAiGC,YAAjG,QAAqH,iBAArH;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AAGA,MAAMC,GAAN,SAAkBnB,KAAK,CAACoB,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAE/BC,KAF+B,GAEvB;AACNC,MAAAA,SAAS,EAAE;AADL,KAFuB;;AAAA,SAkB/BC,eAlB+B,GAkBb,MAAM;AACtB,aAAO,KAAKF,KAAL,CAAWC,SAAX;AAAA;AACP;AACA,cAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAFO,GAGL,IAHF;AAID,KAvB8B;;AAAA,SAyB/BE,WAzB+B,GAyBjB,MAAM;AAClB,0BAAQ;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,kBAAiC,KAAKC,KAAL,CAAWC,IAAX,CAAgBC;AAAjD;AAAA;AAAA;AAAA;AAAA,cAAR;AACD,KA3B8B;AAAA;;AAM/BC,EAAAA,iBAAiB,GAAE;AACjB,SAAKH,KAAL,CAAWhB,SAAX;AACA,UAAMoB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAGF,KAAH,EAAS;AACP,WAAKJ,KAAL,CAAWX,gBAAX,CAA4Be,KAA5B;AACD,KAFD,MAGK;AACHG,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;;AACD,SAAKV,eAAL;AACD;;AAaDW,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,MAAM,EAAG,mBACP,QAAC,KAAD;AACA,cAAA,WAAW,EAAE,KAAKT,KAAL,CAAWZ,WADxB;AAEA,cAAA,WAAW,EAAE,KAAKY,KAAL,CAAWU;AAFxB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,kBADF,EAUI,KAAKV,KAAL,CAAWU,WAAX,gBACF,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,MAAM,EAAG,mBACP,QAAC,KAAD;AACE,cAAA,WAAW,EAAE,KAAKV,KAAL,CAAWU,WAD1B;AAEE,cAAA,eAAe,EAAE,KAAKV,KAAL,CAAWf;AAF9B;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,kBADE,GAUA,IApBJ,eAsBE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,MAAM,EAAG,mBAAM;AAAA,wBACX,KAAKe,KAAL,CAAWC,IAAX,gBACF;AAAA,2BACC,KAAKF,WAAL,EADD,eAEA,QAAC,OAAD;AACE,kBAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,IADnB;AAEE,kBAAA,WAAW,EAAE,KAAKD,KAAL,CAAWU,WAF1B;AAGE,kBAAA,YAAY,EAAE,KAAKV,KAAL,CAAWd;AAH3B;AAAA;AAAA;AAAA;AAAA,wBAFA;AAAA,8BADE,GASE;AAVS;AAFjB;AAAA;AAAA;AAAA;AAAA,kBAtBF,eAuCE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,MAAM,EAAG,mBAAM;AAAA,wBACd,KAAKc,KAAL,CAAWC,IAAX,gBACD;AAAA,2BACC,KAAKF,WAAL,EADD,eAEA,QAAC,KAAD;AACE,kBAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,IADnB;AAEE,kBAAA,YAAY,EAAE,KAAKD,KAAL,CAAWd;AAF3B;AAAA;AAAA;AAAA;AAAA,wBAFA;AAAA,8BADC,GAQA;AATc;AAFjB;AAAA;AAAA;AAAA;AAAA,kBAvCF,eAsDE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,GADP;AAEE,YAAA,MAAM,EAAGyB,WAAD,iBACN;AAAA,wBACI,KAAKX,KAAL,CAAWC,IAAX,gBACF,QAAC,aAAD;AACE,gBAAA,WAAW,EAAE,KAAKF,WADpB;AAEE,gBAAA,OAAO,EAAEY,WAAW,CAACC,OAFvB;AAGE,gBAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWC,IAAX,CAAgBY,aAH5B;AAIE,gBAAA,IAAI,EAAE,KAAKb,KAAL,CAAWC,IAJnB;AAKE,gBAAA,WAAW,EAAE,KAAKD,KAAL,CAAWU,WAL1B;AAME,gBAAA,aAAa,EAAE,KAAKV,KAAL,CAAWb,aAN5B;AAOE,gBAAA,YAAY,EAAE,KAAKa,KAAL,CAAWd;AAP3B;AAAA;AAAA;AAAA;AAAA,sBADE,GAUA;AAXJ;AAHJ;AAAA;AAAA;AAAA;AAAA,kBAtDF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eA8EE,QAAC,MAAD;AACI,QAAA,IAAI,EAAE,KAAKc,KAAL,CAAWC,IADrB;AAEI,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWZ,WAF5B;AAGI,QAAA,aAAa,EAAE,KAAKY,KAAL,CAAWc,aAH9B;AAII,QAAA,aAAa,EAAE,KAAKd,KAAL,CAAWe,aAJ9B;AAKI,QAAA,WAAW,EAAE,KAAKf,KAAL,CAAWU,WAL5B;AAMI,QAAA,YAAY,EAAE,KAAKV,KAAL,CAAWV;AAN7B;AAAA;AAAA;AAAA;AAAA,cA9EF;AAAA,oBADF;AAyFD;;AAvH8B;;AA0HjC,MAAM0B,GAAG,GAAGC,QAAQ,IAAI;AACtB,SAAO;AACLjC,IAAAA,SAAS,EAAE,MAAMiC,QAAQ,CAACjC,SAAS,EAAV,CADpB;AAELC,IAAAA,eAAe,EAAGiC,QAAD,IAAcD,QAAQ,CAAChC,eAAe,CAACiC,QAAD,CAAhB,CAFlC;AAGLhC,IAAAA,YAAY,EAAGgC,QAAD,IAAcD,QAAQ,CAAC/B,YAAY,CAACgC,QAAD,CAAb,CAH/B;AAIL/B,IAAAA,aAAa,EAAGgC,MAAD,IAAYF,QAAQ,CAAC9B,aAAa,CAACgC,MAAD,CAAd,CAJ9B;AAKL/B,IAAAA,WAAW,EAAGgC,QAAD,IAAcH,QAAQ,CAAC7B,WAAW,CAACgC,QAAD,CAAZ,CAL9B;AAML/B,IAAAA,gBAAgB,EAAGe,KAAD,IAAWa,QAAQ,CAAC5B,gBAAgB,CAACe,KAAD,CAAjB,CANhC;AAOLd,IAAAA,YAAY,EAAE,MAAM2B,QAAQ,CAAC3B,YAAY,EAAb;AAPvB,GAAP;AASD,CAVD;;AAYA,MAAM+B,GAAG,GAAGzB,KAAK,IAAI;AACnB,SAAO;AACLK,IAAAA,IAAI,EAAEL,KAAK,CAACK,IADP;AAELS,IAAAA,WAAW,EAAEd,KAAK,CAACc;AAFd,GAAP;AAID,CALD;;AAOA,eAAelC,OAAO,CAAC6C,GAAD,EAAML,GAAN,CAAP,CAAkBtB,GAAlB,CAAf","sourcesContent":["import './App.css';\nimport React from 'react'\nimport { connect } from 'react-redux';\nimport {  Route, Switch } from 'react-router-dom';\nimport Header from './containers/Header';\nimport Footer from './components/Footer';\nimport ProjectsIndex from './containers/ProjectsIndex';\nimport Contact from './containers/Contact';\nimport About from './containers/About';\nimport { fetchUser, editAccountInfo, editSiteInfo, createProject, submitLogin, fetchCurrentUser, handleLogout } from './redux/actions'\nimport Login from './components/Login';\nimport Admin from './components/Admin'\nimport { InfoModal } from './components/InfoModal';\n\n\nclass App extends React.Component{\n\n  state = {\n    infoModal: true\n  }\n\n  componentDidMount(){\n    this.props.fetchUser()\n    const token = localStorage.getItem(\"token\")\n    if(token){\n      this.props.fetchCurrentUser(token)\n    }\n    else {\n      console.log(\"no token\")\n    }\n    this.renderInfoModal()\n  }\n\n  renderInfoModal = () => {\n    return this.state.infoModal ? \n    // console.log(\"modal here\") \n    <InfoModal />\n    : null\n  }\n\n  renderTitle = () => {\n    return  <h1 className=\"site-title solo\">{this.props.user.site_title}</h1>\n  }\n\n  render(){\n    return (\n      <>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route \n            path=\"/login\"\n            render={ () =>\n              <Login \n              submitLogin={this.props.submitLogin}\n              currentUser={this.props.currentUser}\n              />\n            }\n          />\n          { this.props.currentUser ?\n          <Route \n            path=\"/admin\"\n            render={ () =>\n              <Admin \n                currentUser={this.props.currentUser}\n                editAccountInfo={this.props.editAccountInfo}\n              />\n            }\n          />\n          : null\n          }\n          <Route \n            path=\"/contact\" \n            render={ () => <>\n              { this.props.user ? \n              <>\n              {this.renderTitle()}\n              <Contact \n                user={this.props.user}\n                currentUser={this.props.currentUser}\n                editSiteInfo={this.props.editSiteInfo}\n              />\n              </> \n                : null\n              }\n              </>\n            }\n          />\n          <Route \n            path=\"/about\" \n            render={ () => <>\n            {this.props.user ?\n            <>\n            {this.renderTitle()}\n            <About \n              user={this.props.user}\n              editSiteInfo={this.props.editSiteInfo}\n            /> \n            </>\n            :null}\n            </>\n            }\n          />\n          <Route \n            path=\"/\"\n            render={(routerProps) => \n              <>\n                { this.props.user ? \n                <ProjectsIndex \n                  renderTitle={this.renderTitle}\n                  history={routerProps.history}\n                  projects={this.props.user.user_projects}\n                  user={this.props.user}\n                  currentUser={this.props.currentUser}\n                  createProject={this.props.createProject}\n                  editSiteInfo={this.props.editSiteInfo}\n                  />\n                : null\n                }\n              </>\n            }\n          />\n        </Switch>\n      </div>\n        <Footer \n            user={this.props.user}\n            submitLogin={this.props.submitLogin}\n            startEditMode={this.props.startEditMode}\n            startViewMode={this.props.startViewMode}\n            currentUser={this.props.currentUser}\n            handleLogout={this.props.handleLogout}\n        />\n        </>\n    );\n  }\n}\n\nconst mdp = dispatch => {\n  return {\n    fetchUser: () => dispatch(fetchUser()),\n    editAccountInfo: (patchObj) => dispatch(editAccountInfo(patchObj)),\n    editSiteInfo: (patchObj) => dispatch(editSiteInfo(patchObj)),\n    createProject: (userId) => dispatch(createProject(userId)),\n    submitLogin: (loginObj) => dispatch(submitLogin(loginObj)),\n    fetchCurrentUser: (token) => dispatch(fetchCurrentUser(token)),\n    handleLogout: () => dispatch(handleLogout())\n  }\n}\n\nconst msp = state => {\n  return {\n    user: state.user,\n    currentUser: state.currentUser\n  }\n}\n\nexport default connect(msp, mdp)(App);\n"]},"metadata":{},"sourceType":"module"}