{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jdbrewer-hofmann/Development/code/tombardier-live-demo/frontend/src/containers/ProjectsIndex.js\";\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ProjectLinkCard from '../components/ProjectLinkCard';\nimport ProjectCard from '../components/ProjectCard';\nimport Home from '../components/Home';\nexport default class ProjectsIndex extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderProjectLinks = () => {\n      return this.props.projects.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pl-link\",\n        children: /*#__PURE__*/_jsxDEV(ProjectLinkCard, {\n          project: p\n        }, p.project_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }, this)\n      }, p.project_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this));\n    };\n\n    this.addNewProject = () => {\n      let newProjObj = {\n        title: \"New Project\",\n        subtitle: \"subtitle\",\n        description: \"Add your project's description here\",\n        user_id: this.props.user.id\n      };\n      this.props.createProject(newProjObj); // this.props.history.push(`${this.props.projects[this.props.projects.length -1].project_id}`)\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/projects/:id\",\n        render: routerProps => {\n          let id = parseInt(routerProps.match.params.id);\n          let project;\n          project = this.props.projects.find(proj => proj.project_id === id);\n\n          if (project) {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [this.props.renderTitle(), /*#__PURE__*/_jsxDEV(ProjectCard, {\n                history: this.props.history,\n                project: project\n              }, project.project_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        render: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Home, {\n            user: this.props.user,\n            editSiteInfo: this.props.editSiteInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"section-header\",\n            children: \"Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: [this.renderProjectLinks(), this.props.currentUser ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.addNewProject,\n              className: \"update mg-btn-5\",\n              children: \"Add New Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jdbrewer-hofmann/Development/code/tombardier-live-demo/frontend/src/containers/ProjectsIndex.js"],"names":["React","Route","Switch","ProjectLinkCard","ProjectCard","Home","ProjectsIndex","Component","renderProjectLinks","props","projects","map","p","project_id","addNewProject","newProjObj","title","subtitle","description","user_id","user","id","createProject","render","routerProps","parseInt","match","params","project","find","proj","renderTitle","history","editSiteInfo","currentUser"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA6B,kBAA7B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAGA,eAAe,MAAMC,aAAN,SAA4BN,KAAK,CAACO,SAAlC,CAA2C;AAAA;AAAA;;AAAA,SAEtDC,kBAFsD,GAEjC,MAAM;AACvB,aAAO,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAyBC,CAAC,iBAC7B;AAAwB,QAAA,SAAS,EAAC,SAAlC;AAAA,+BACI,QAAC,eAAD;AAEI,UAAA,OAAO,EAAEA;AAFb,WACSA,CAAC,CAACC,UADX;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUD,CAAC,CAACC,UAAZ;AAAA;AAAA;AAAA;AAAA,cADG,CAAP;AAOH,KAVqD;;AAAA,SAYtDC,aAZsD,GAYtC,MAAM;AAClB,UAAIC,UAAU,GAAG;AACbC,QAAAA,KAAK,EAAE,aADM;AAEbC,QAAAA,QAAQ,EAAE,UAFG;AAGbC,QAAAA,WAAW,EAAE,qCAHA;AAIbC,QAAAA,OAAO,EAAE,KAAKV,KAAL,CAAWW,IAAX,CAAgBC;AAJZ,OAAjB;AAMA,WAAKZ,KAAL,CAAWa,aAAX,CAAyBP,UAAzB,EAPkB,CAQlB;AACH,KArBqD;AAAA;;AAuBtDQ,EAAAA,MAAM,GAAE;AACJ,wBACI,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,IAAI,EAAC,eADT;AAEI,QAAA,MAAM,EAAIC,WAAD,IACL;AAAE,cAAIH,EAAE,GAAGI,QAAQ,CAACD,WAAW,CAACE,KAAZ,CAAkBC,MAAlB,CAAyBN,EAA1B,CAAjB;AACF,cAAIO,OAAJ;AACAA,UAAAA,OAAO,GAAG,KAAKnB,KAAL,CAAWC,QAAX,CAAoBmB,IAApB,CAA0BC,IAAI,IAAIA,IAAI,CAACjB,UAAL,KAAoBQ,EAAtD,CAAV;;AACA,cAAGO,OAAH,EAAW;AACP,gCACI;AAAA,yBACC,KAAKnB,KAAL,CAAWsB,WAAX,EADD,eAEJ,QAAC,WAAD;AACI,gBAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWuB,OADxB;AAEI,gBAAA,OAAO,EAAEJ;AAFb,iBAGSA,OAAO,CAACf,UAHjB;AAAA;AAAA;AAAA;AAAA,sBAFI;AAAA,4BADJ;AAUH;AACJ;AAlBL;AAAA;AAAA;AAAA;AAAA,cADJ,eAsBI,QAAC,KAAD;AACI,QAAA,IAAI,EAAC,GADT;AAEI,QAAA,MAAM,EAAE,mBACJ;AAAA,kCACA,QAAC,IAAD;AACI,YAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWW,IADrB;AAEI,YAAA,YAAY,EAAE,KAAKX,KAAL,CAAWwB;AAF7B;AAAA;AAAA;AAAA;AAAA,kBADA,eAKA;AAAI,YAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,eAMA;AAAK,YAAA,SAAS,EAAC,EAAf;AAAA,uBACK,KAAKzB,kBAAL,EADL,EAEC,KAAKC,KAAL,CAAWyB,WAAX,gBACD;AACI,cAAA,OAAO,EAAE,KAAKpB,aADlB;AAEI,cAAA,SAAS,EAAC,iBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADC,GAKC,IAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBANA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,cAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA8CH;;AAtEqD","sourcesContent":["import React from 'react'\nimport { Route, Switch} from 'react-router-dom'\nimport ProjectLinkCard from '../components/ProjectLinkCard'\nimport ProjectCard from '../components/ProjectCard'\nimport Home from '../components/Home';\n\n\nexport default class ProjectsIndex extends React.Component{\n\n    renderProjectLinks = () => {\n        return this.props.projects.map( p => \n            <div key={p.project_id} className=\"pl-link\">\n                <ProjectLinkCard\n                    key={p.project_id}\n                    project={p}\n                /> \n            </div>)\n    }\n    \n    addNewProject = () => {\n        let newProjObj = {\n            title: \"New Project\",\n            subtitle: \"subtitle\",\n            description: \"Add your project's description here\",\n            user_id: this.props.user.id\n        }\n        this.props.createProject(newProjObj)\n        // this.props.history.push(`${this.props.projects[this.props.projects.length -1].project_id}`)\n    }\n\n    render(){\n        return(\n            <Switch>\n                <Route \n                    path=\"/projects/:id\"\n                    render={ (routerProps) => \n                        { let id = parseInt(routerProps.match.params.id)  \n                        let project;\n                        project = this.props.projects.find( proj => proj.project_id === id)\n                        if(project){\n                            return ( \n                                <>\n                                {this.props.renderTitle()}\n                            <ProjectCard \n                                history={this.props.history}\n                                project={project}\n                                key={project.project_id}\n                            />\n                            </>\n                            )\n                        } \n                    }\n                    }\n                />\n                <Route \n                    path=\"/\"\n                    render={() =>\n                        <>\n                        <Home \n                            user={this.props.user}\n                            editSiteInfo={this.props.editSiteInfo}\n                        />\n                        <h3 className=\"section-header\">Projects</h3>\n                        <div className=\"\">\n                            {this.renderProjectLinks()}\n                        {this.props.currentUser ?\n                        <button \n                            onClick={this.addNewProject}\n                            className=\"update mg-btn-5\"\n                        >Add New Project</button>\n                        : null }\n                        </div>\n                        </>\n                    }\n                />\n            </Switch>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}