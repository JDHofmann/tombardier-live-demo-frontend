{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jdbrewer-hofmann/Development/code/tombardier-live-demo/frontend/src/components/Link.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { editLinkInfo, createUserLink, deleteUserLink, editProjectLink, deleteProjectLink } from '../redux/actions';\nimport LocalEditBtn from './LocalEditBtn'; // import LocalDeleteBtn from './LocalDeleteBtn';\n\nimport LinkForm from './LinkForm';\n\nclass Link extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      link_url: this.props.link.link_url,\n      link_text: this.props.link.link_text,\n      id: this.props.link.id,\n      editMode: false\n    };\n\n    this.toggleEditMode = () => {\n      this.setState(prevState => ({\n        editMode: !prevState.editMode\n      }));\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let patchObj = { ...this.state\n      };\n      delete patchObj.editMode;\n\n      if (this.props.project) {\n        this.props.editProjectLink(patchObj);\n      } else {\n        this.props.editLinkInfo(patchObj);\n      }\n\n      this.setState({\n        editMode: false\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleDelete = () => {\n      if (this.props.project) {\n        this.props.deleteProjectLink(this.state.id);\n      } else {\n        this.props.deleteUserLink(this.state.id);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: this.state.editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"section-header lighter\",\n          children: \"Update Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(LinkForm, {\n          link_url: this.state.link_url,\n          handleChange: this.handleChange,\n          handleSubmit: this.handleSubmit,\n          link_text: this.state.link_text,\n          toggleEditMode: this.toggleEditMode,\n          handleDelete: this.handleDelete,\n          editMode: this.state.editMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-sub-div \",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"grid-1-2 link-hover content-row\",\n          target: \"_blank\",\n          href: this.props.link.link_url,\n          children: this.props.link.link_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LocalEditBtn, {\n          editMode: this.state.editMode,\n          toggleEditMode: this.toggleEditMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mdp = dispatch => {\n  return {\n    editLinkInfo: patchObj => dispatch(editLinkInfo(patchObj)),\n    createUserLink: (newLink, userId) => dispatch(createUserLink(newLink, userId)),\n    deleteUserLink: id => dispatch(deleteUserLink(id)),\n    editProjectLink: patchObj => dispatch(editProjectLink(patchObj)),\n    deleteProjectLink: id => dispatch(deleteProjectLink(id))\n  };\n};\n\nexport default connect(null, mdp)(Link);","map":{"version":3,"sources":["/Users/jdbrewer-hofmann/Development/code/tombardier-live-demo/frontend/src/components/Link.js"],"names":["React","connect","editLinkInfo","createUserLink","deleteUserLink","editProjectLink","deleteProjectLink","LocalEditBtn","LinkForm","Link","Component","state","link_url","props","link","link_text","id","editMode","toggleEditMode","setState","prevState","handleSubmit","e","preventDefault","patchObj","project","handleChange","target","name","value","handleDelete","render","mdp","dispatch","newLink","userId"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { editLinkInfo, createUserLink, deleteUserLink, editProjectLink, deleteProjectLink } from '../redux/actions'\nimport LocalEditBtn from './LocalEditBtn'\n// import LocalDeleteBtn from './LocalDeleteBtn';\nimport LinkForm from './LinkForm';\n\n\nclass Link extends React.Component{\n\n    state = {\n        link_url: this.props.link.link_url,\n        link_text: this.props.link.link_text,\n        id: this.props.link.id,\n        editMode: false\n    }\n\n    toggleEditMode = () => {\n        this.setState( prevState => ({\n            editMode: !prevState.editMode\n        }) )\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        let patchObj = {...this.state}    \n        delete patchObj.editMode \n        if(this.props.project){\n            this.props.editProjectLink(patchObj)\n        } else {\n            this.props.editLinkInfo(patchObj) \n        }\n        this.setState({\n            editMode: false\n        })\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleDelete = () => {\n        if(this.props.project){\n            this.props.deleteProjectLink(this.state.id)\n        } else {\n            this.props.deleteUserLink(this.state.id)\n        }\n    }\n\n    render(){\n        return(\n            <li>\n            {this.state.editMode ?\n                <>\n                <h4 className=\"section-header lighter\">Update Link</h4> \n                <LinkForm \n                    link_url={this.state.link_url}\n                    handleChange={this.handleChange}\n                    handleSubmit={this.handleSubmit}\n                    link_text={this.state.link_text}\n                    toggleEditMode={this.toggleEditMode}\n                    handleDelete={this.handleDelete}\n                    editMode={this.state.editMode}\n                />\n                </>\n                :\n                <div className=\"content-sub-div \">\n                    <a\n                        className=\"grid-1-2 link-hover content-row\"\n                        target=\"_blank\"\n                        href={this.props.link.link_url}\n                    >{this.props.link.link_text}</a>  \n                    {/* <LocalDeleteBtn \n                        handleDelete={this.handleDelete}\n                    /> */}\n                    <LocalEditBtn \n                        editMode={this.state.editMode}\n                        toggleEditMode={this.toggleEditMode}\n                    />\n                </div>\n            }\n            </li>\n\n        )\n    }\n}\n\nconst mdp = dispatch => {\n    return {\n        editLinkInfo: (patchObj) => dispatch(editLinkInfo(patchObj)),\n        createUserLink: (newLink, userId) => dispatch(createUserLink(newLink, userId) ),\n        deleteUserLink: (id) => dispatch(deleteUserLink(id)),\n        editProjectLink: (patchObj) => dispatch(editProjectLink(patchObj)),\n        deleteProjectLink: (id) => dispatch(deleteProjectLink(id))\n    }\n}\n\nexport default connect(null, mdp)(Link)"]},"metadata":{},"sourceType":"module"}