{"ast":null,"code":"const userUrl = \"http://localhost:3000/users/3\";\nexport const fetchUser = () => {\n  // console.log(\"fetching user\")\n  return dispatch => {\n    fetch(userUrl).then(resp => resp.json()).then(userData => dispatch({\n      type: 'LOAD_USER',\n      user: userData\n    }));\n  };\n};\nexport const submitLogin = loginObj => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accepts\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: loginObj\n      })\n    }).then(r => r.json()).then(data => {\n      console.log(\"data\", data); // if(!data.message === \"Invalid username or password\"){\n\n      localStorage.setItem(\"token\", data.jwt);\n      dispatch({\n        type: 'SET_CURRENT_USER',\n        currentUser: data.user\n      }); // } else {\n      //     dispatch({\n      //         type: 'REMOVE_CURRENT_USER'\n      //     })\n      // }\n    });\n  };\n};\nexport const handleLogout = () => {\n  return {\n    type: 'REMOVE_CURRENT_USER'\n  };\n};\nexport const fetchCurrentUser = token => {\n  return dispatch => {\n    fetch(`http://localhost:3000/profile`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(resp => resp.json()).then(data => dispatch({\n      type: 'SET_CURRENT_USER',\n      currentUser: data\n    }));\n  };\n};\nexport const editAccountInfo = patchObj => {\n  const token = localStorage.getItem(\"token\");\n  console.log(patchObj);\n  return dispatch => {\n    fetch(userUrl, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(patchObj)\n    }).then(resp => resp.json()).then(data => dispatch(fetchUser()));\n  };\n};\nexport const editSiteInfo = patchObj => {\n  const token = localStorage.getItem(\"token\"); // console.log(patchObj)\n\n  return dispatch => {\n    fetch(userUrl, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(patchObj)\n    }).then(resp => resp.json()).then(data => dispatch(fetchUser()));\n  };\n};\nexport const editLinkInfo = patchObj => {\n  const token = localStorage.getItem(\"token\");\n  return dispatch => {\n    fetch(`http://localhost:3000/user_links/${patchObj.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(patchObj)\n    }).then(resp => resp.json()).then(updatedLink => dispatch(fetchUser()));\n  };\n};\nexport const deleteUserLink = id => {\n  const token = localStorage.getItem(\"token\");\n  return dispatch => {\n    fetch(`http://localhost:3000/user_links/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(resp => resp.json()).then(data => dispatch(fetchUser()));\n  };\n};\nexport const createUserLink = (newObj, userId) => {\n  const token = localStorage.getItem(\"token\");\n  return dispatch => {\n    fetch(`http://localhost:3000/user_links`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ ...newObj,\n        user_id: userId\n      })\n    }).then(resp => resp.json()).then(updatedLink => dispatch(fetchUser()));\n  };\n};\nexport const newUserImage = imageformData => {\n  const token = localStorage.getItem(\"token\");\n  return dispatch => {\n    let options = {\n      method: \"PATCH\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: imageformData\n    };\n    fetch(userUrl, options).then(resp => resp.json()).then(useless => dispatch(fetchUser()));\n  };\n};\nexport const createProject = newProjObj => {\n  const token = localStorage.getItem(\"token\");\n  return dispatch => {\n    fetch(\"http://localhost:3000/projects\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(newProjObj)\n    }).then(resp => resp.json()).then(useless => dispatch(fetchUser()));\n  };\n};\nexport const updateProject = patchObj => {\n  const token = localStorage.getItem(\"token\");\n  return dispatch => {\n    fetch(`http://localhost:3000/projects/${patchObj.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(patchObj)\n    }).then(resp => resp.json()).then(data => dispatch(fetchUser()));\n  };\n};\nexport const deleteProject = id => {\n  const token = localStorage.getItem(\"token\");\n  return dispatch => {\n    fetch(`http://localhost:3000/projects/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(resp => resp.json()).then(data => dispatch(fetchUser()));\n  };\n};\nexport const newProjectImage = (newImage, projectImageId) => {\n  const token = localStorage.getItem(\"token\");\n  return dispatch => {\n    let options = {\n      method: \"PATCH\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: newImage\n    };\n    fetch(`http://localhost:3000/project_images/${projectImageId}`, options).then(resp => resp.json()).then(data => dispatch(fetchUser()));\n  };\n};\nexport const brandnewProjectImage = newImage => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    let options = {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: newImage\n    };\n    fetch(`http://localhost:3000/project_images`, options).then(resp => resp.json()).then(data => dispatch(fetchUser()));\n  };\n};\nexport const deleteProjectImage = id => {\n  const token = localStorage.getItem(\"token\");\n  return dispatch => {\n    fetch(`http://localhost:3000/project_images/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(resp => resp.json()).then(data => dispatch(fetchUser()));\n  };\n};\nexport const createProjectLink = (newObj, projectId) => {\n  const token = localStorage.getItem(\"token\");\n  return dispatch => {\n    console.log(newObj, projectId);\n    fetch(`http://localhost:3000/project_links`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ ...newObj,\n        project_id: projectId\n      })\n    }).then(resp => resp.json()).then(updatedLink => dispatch(fetchUser()));\n  };\n};\nexport const editProjectLink = patchObj => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    fetch(`http://localhost:3000/project_links/${patchObj.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(patchObj)\n    }).then(resp => resp.json()).then(updatedLink => dispatch(fetchUser()));\n  };\n};\nexport const deleteProjectLink = id => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    fetch(`http://localhost:3000/project_links/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(resp => resp.json()).then(data => dispatch(fetchUser()));\n  };\n};","map":{"version":3,"sources":["/Users/jdbrewer-hofmann/Development/code/tombardier-live-demo/frontend/src/redux/actions.js"],"names":["userUrl","fetchUser","dispatch","fetch","then","resp","json","userData","type","user","submitLogin","loginObj","method","headers","body","JSON","stringify","r","data","console","log","localStorage","setItem","jwt","currentUser","handleLogout","fetchCurrentUser","token","Authorization","editAccountInfo","patchObj","getItem","editSiteInfo","editLinkInfo","id","updatedLink","deleteUserLink","createUserLink","newObj","userId","user_id","newUserImage","imageformData","options","useless","createProject","newProjObj","updateProject","deleteProject","newProjectImage","newImage","projectImageId","brandnewProjectImage","deleteProjectImage","createProjectLink","projectId","project_id","editProjectLink","deleteProjectLink"],"mappings":"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","sourcesContent":["const userUrl = \"http://localhost:3000/users/3\"\n\nexport const fetchUser = () => {\n    // console.log(\"fetching user\")\n    return (dispatch) => {\n        fetch(userUrl)\n        .then(resp => resp.json())\n        .then(userData => dispatch({\n            type: 'LOAD_USER',\n            user: userData\n        }))\n    }\n}\n\nexport const submitLogin = (loginObj) => {\n    return (dispatch) => {\n        fetch(\"http://localhost:3000/login\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\":\"application/json\",\n                \"accepts\":\"application/json\"\n            },\n            body: JSON.stringify({\n                user: loginObj\n            })\n            })\n            .then(r => r.json())\n            .then(data => {\n            console.log(\"data\", data)\n            // if(!data.message === \"Invalid username or password\"){\n                localStorage.setItem(\"token\", data.jwt)\n                dispatch({\n                    type: 'SET_CURRENT_USER',\n                    currentUser: data.user\n                })\n            // } else {\n            //     dispatch({\n            //         type: 'REMOVE_CURRENT_USER'\n            //     })\n            // }\n        })\n    }\n}\n\nexport const handleLogout = () => {\n    return {\n        type: 'REMOVE_CURRENT_USER'\n    }\n}\n\nexport const fetchCurrentUser = (token) => {\n    return (dispatch) => {\n        fetch(`http://localhost:3000/profile`,{\n            method: \"GET\",\n            headers: { Authorization: `Bearer ${token}`}\n        })\n        .then(resp => resp.json())\n        .then(data => dispatch({\n            type: 'SET_CURRENT_USER',\n            currentUser: data\n        }))\n    }\n}\n\nexport const editAccountInfo = (patchObj) => {\n    const token = localStorage.getItem(\"token\")\n    console.log(patchObj)\n    return (dispatch) => {\n        fetch(userUrl, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\":\"application/json\",\n                \"accept\":\"application/json\",\n                Authorization: `Bearer ${token}`\n            },\n            body: JSON.stringify(patchObj)\n        })\n        .then(resp => resp.json())\n        .then(data => dispatch(fetchUser()))\n    }\n}\n\nexport const editSiteInfo = (patchObj) => {\n    const token = localStorage.getItem(\"token\")\n    // console.log(patchObj)\n    return (dispatch) => {\n        fetch(userUrl, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\":\"application/json\",\n                \"accept\":\"application/json\",\n                Authorization: `Bearer ${token}`\n            },\n            body: JSON.stringify(patchObj)\n        })\n        .then(resp => resp.json())\n        .then(data => dispatch(fetchUser()))\n    }\n}\n\nexport const editLinkInfo = (patchObj) => {\n    const token = localStorage.getItem(\"token\")\n    return (dispatch) => {\n        fetch(`http://localhost:3000/user_links/${patchObj.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\":\"application/json\",\n                \"accept\":\"application/json\",\n                Authorization: `Bearer ${token}`\n            },\n            body: JSON.stringify(patchObj)\n        })\n        .then(resp => resp.json())\n        .then(updatedLink => dispatch(fetchUser()))\n    }\n}\n\nexport const deleteUserLink = (id) => {\n    const token = localStorage.getItem(\"token\")\n    return (dispatch) => {\n        fetch(`http://localhost:3000/user_links/${id}`, {\n            method: \"DELETE\",\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        })\n        .then(resp => resp.json())\n        .then(data => dispatch(fetchUser()))\n    }\n}\n\nexport const createUserLink = (newObj, userId) => {\n    const token = localStorage.getItem(\"token\")\n    return (dispatch) => {\n        fetch(`http://localhost:3000/user_links`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\":\"application/json\",\n                \"accept\":\"application/json\",\n                Authorization: `Bearer ${token}`\n            },\n            body: JSON.stringify({...newObj, user_id: userId})\n        })\n        .then(resp => resp.json())\n        .then(updatedLink => dispatch(fetchUser()))\n    }\n}\n\nexport const newUserImage = (imageformData) => {\n    const token = localStorage.getItem(\"token\")\n\n    return (dispatch) => {\n        let options = {\n            method: \"PATCH\",\n            headers: {\n                Authorization: `Bearer ${token}`\n            },\n            body: imageformData\n        }\n        fetch(userUrl, options)\n        .then(resp => resp.json())\n        .then(useless => dispatch(fetchUser()))\n    }\n}\n\nexport const createProject = (newProjObj) => {\n    const token = localStorage.getItem(\"token\")\n    return (dispatch) => {\n        fetch(\"http://localhost:3000/projects\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\":\"application/json\",\n                \"accept\":\"application/json\",\n                Authorization: `Bearer ${token}`\n            },\n            body: JSON.stringify(newProjObj)\n        })\n        .then(resp => resp.json())\n        .then(useless => dispatch(fetchUser()))\n    }\n}\n\nexport const updateProject = (patchObj) => {\n    const token = localStorage.getItem(\"token\")\n    return (dispatch) => {\n        fetch(`http://localhost:3000/projects/${patchObj.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\":\"application/json\",\n                \"accept\":\"application/json\",\n                Authorization: `Bearer ${token}`\n            },\n            body: JSON.stringify(patchObj)\n        })\n        .then(resp => resp.json())\n        .then(data => dispatch(fetchUser()))\n    }\n}\n\nexport const deleteProject = (id) => {\n    const token = localStorage.getItem(\"token\")\n    return (dispatch) => {\n        fetch(`http://localhost:3000/projects/${id}`, {\n            method: \"DELETE\",\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        })\n        .then(resp => resp.json())\n        .then(data => dispatch(fetchUser()))\n    }\n}\n\nexport const newProjectImage = (newImage, projectImageId) => {\n    const token = localStorage.getItem(\"token\")\n    return (dispatch) => {\n        let options = {\n            method: \"PATCH\",\n            headers: {\n                Authorization: `Bearer ${token}`\n            },\n            body: newImage\n        }\n        fetch(`http://localhost:3000/project_images/${projectImageId}`, options)\n        .then(resp => resp.json())\n        .then(data => dispatch(fetchUser()))\n    }\n}\n\nexport const brandnewProjectImage = (newImage) => {\n    return (dispatch) => {\n        const token = localStorage.getItem(\"token\")\n        let options = {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${token}`\n            },\n            body: newImage\n        }\n        fetch(`http://localhost:3000/project_images`, options)\n        .then(resp => resp.json())\n        .then(data => dispatch(fetchUser()))\n    }\n}\n\nexport const deleteProjectImage = (id) => {\n    const token = localStorage.getItem(\"token\")\n    return (dispatch) => {\n        fetch(`http://localhost:3000/project_images/${id}`, {\n            method: \"DELETE\",\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        })\n        .then(resp => resp.json())\n        .then(data => dispatch(fetchUser()))\n    }\n}\n\nexport const createProjectLink = (newObj, projectId) => {\n    const token = localStorage.getItem(\"token\")\n    return (dispatch) => {\n        console.log(newObj, projectId)\n        fetch(`http://localhost:3000/project_links`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\":\"application/json\",\n                \"accept\":\"application/json\",\n                Authorization: `Bearer ${token}`\n            },\n            body: JSON.stringify({...newObj, project_id: projectId})\n        })\n        .then(resp => resp.json())\n        .then(updatedLink => dispatch(fetchUser()))\n    }\n}\n\nexport const editProjectLink = (patchObj) => {\n    return (dispatch) => {\n        const token = localStorage.getItem(\"token\")\n        fetch(`http://localhost:3000/project_links/${patchObj.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\":\"application/json\",\n                \"accept\":\"application/json\",\n                Authorization: `Bearer ${token}`\n            },\n            body: JSON.stringify(patchObj)\n        })\n        .then(resp => resp.json())\n        .then(updatedLink => dispatch(fetchUser()))\n    }\n}\n\nexport const deleteProjectLink = (id) => {\n    return (dispatch) => {\n        const token = localStorage.getItem(\"token\")\n        fetch(`http://localhost:3000/project_links/${id}`, {\n            method: \"DELETE\",\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        })\n        .then(resp => resp.json())\n        .then(data => dispatch(fetchUser()))\n    }\n}"]},"metadata":{},"sourceType":"module"}