{"ast":null,"code":"import { combineReducers } from \"redux\";\nconst defaultState = {\n  user: null,\n  currentUser: null // us\n\n};\n\nconst userReducer = (state = defaultState.user, action) => {\n  switch (action.type) {\n    case 'LOAD_USER':\n      return action.user;\n\n    default:\n      return state;\n  }\n};\n\nconst currentUserReducer = (state = defaultState.currentUser, action) => {\n  switch (action.type) {\n    case 'SET_CURRENT_USER':\n      return action.currentUser;\n\n    case 'REMOVE_CURRENT_USER':\n      localStorage.removeItem(\"token\");\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  currentUser: currentUserReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/jdbrewer-hofmann/Development/code/tombardier-live-demo/frontend/src/redux/rootReducer.js"],"names":["combineReducers","defaultState","user","currentUser","userReducer","state","action","type","currentUserReducer","localStorage","removeItem","rootReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,IADW;AAEjBC,EAAAA,WAAW,EAAE,IAFI,CAGjB;;AAHiB,CAArB;;AAMA,MAAMC,WAAW,GAAG,CAChBC,KAAK,GAAGJ,YAAY,CAACC,IADL,EAEhBI,MAFgB,KAGf;AACD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAOD,MAAM,CAACJ,IAAd;;AAEJ;AACI,aAAOG,KAAP;AALR;AAOH,CAXD;;AAaA,MAAMG,kBAAkB,GAAG,CACvBH,KAAK,GAAGJ,YAAY,CAACE,WADE,EAEvBG,MAFuB,KAGtB;AACD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,kBAAL;AACI,aAAOD,MAAM,CAACH,WAAd;;AAEJ,SAAK,qBAAL;AACIM,MAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACA,aAAO,IAAP;;AACJ;AACI,aAAOL,KAAP;AARR;AAUH,CAdD;;AAgBA,MAAMM,WAAW,GAAGX,eAAe,CAAC;AAChCE,EAAAA,IAAI,EAAEE,WAD0B;AAEhCD,EAAAA,WAAW,EAAEK;AAFmB,CAAD,CAAnC;AAKA,eAAeG,WAAf","sourcesContent":["import { combineReducers } from \"redux\"\n\nconst defaultState = {\n    user: null,\n    currentUser: null\n    // us\n}\n\nconst userReducer = (\n    state = defaultState.user,\n    action\n) => {\n    switch (action.type){\n        case 'LOAD_USER':\n            return action.user\n\n        default :\n            return state\n    }\n}\n\nconst currentUserReducer = (\n    state = defaultState.currentUser,\n    action\n) => {\n    switch (action.type){\n        case 'SET_CURRENT_USER':\n            return action.currentUser\n\n        case 'REMOVE_CURRENT_USER':\n            localStorage.removeItem(\"token\")\n            return null\n        default :\n            return state\n    }\n}\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    currentUser: currentUserReducer\n})\n\nexport default rootReducer\n"]},"metadata":{},"sourceType":"module"}